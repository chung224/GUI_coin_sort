# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtQuickWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox,QDialog,QVBoxLayout, QDialogButtonBox,QPushButton, QGridLayout,QLineEdit,QWidget,QLabel
import sys


coin_dict =  {"£2": 200,"£1": 100,"50p": 50,"20p": 20,"10p":10 }
coins_interface = ["£2","£1","50p","20p","10p"]
keys = [1,2,3,4,5,6]
settings = {"max_": 10000,"min_":0,"currency_":"GBX","currency_convert":1, "currency_list":["GBX","MGA","USD"]}



class Ui_MainWindow(QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(502, 468)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        # Coin Calculator Button
        self.b1 = QtWidgets.QPushButton(self.centralwidget)
        self.b1.setGeometry(QtCore.QRect(20, 70, 191, 32))
        self.b1.setObjectName("b1")
        self.b1.clicked.connect(self.clicked)
        
        # Multi Coin Calculator Button
        self.b2 = QtWidgets.QPushButton(self.centralwidget)
        self.b2.setGeometry(QtCore.QRect(20, 100, 191, 32))
        self.b2.setObjectName("b2")
        self.b2.clicked.connect(self.clicked2)
        
        # Print Coin List Button
        self.b3 = QtWidgets.QPushButton(self.centralwidget)
        self.b3.setGeometry(QtCore.QRect(20, 130, 191, 32))
        self.b3.setObjectName("b3")
        self.b3.clicked.connect(self.clicked3)
        
        # Set Details Button
        self.b4 = QtWidgets.QPushButton(self.centralwidget)
        self.b4.setGeometry(QtCore.QRect(20, 160, 191, 32))
        self.b4.setObjectName("b4")
        self.b4.clicked.connect(self.show_new_window)
        
        # Display Program Config. Button
        self.b5 = QtWidgets.QPushButton(self.centralwidget)
        self.b5.setGeometry(QtCore.QRect(20, 190, 191, 32))
        self.b5.setObjectName("b5")
        self.b5.clicked.connect(self.config_popup)
        
        # Quit the Program Button
        self.b6 = QtWidgets.QPushButton(self.centralwidget)
        self.b6.setGeometry(QtCore.QRect(20, 220, 191, 32))
        self.b6.setObjectName("b6")
        self.b6.clicked.connect(self.clicked6)
        
        # Company Name Label
        self.l1 = QtWidgets.QLabel(self.centralwidget)
        self.l1.setGeometry(QtCore.QRect(10, 10, 261, 31))
        self.l1.setFont(QtGui.QFont('Arial', 18))
        self.l1.setObjectName("l1")
        
        # Main Menu Label
        self.l2 = QtWidgets.QLabel(self.centralwidget)
        self.l2.setGeometry(QtCore.QRect(10, 40, 211, 41))
        self.l2.setFont(QtGui.QFont('Arial', 15))
        self.l2.setObjectName("l2")
        
        self.quickWidget = QtQuickWidgets.QQuickWidget(self.centralwidget)
        self.quickWidget.setGeometry(QtCore.QRect(250, 50, 231, 371))
        self.quickWidget.setResizeMode(QtQuickWidgets.QQuickWidget.SizeRootObjectToView)
        self.quickWidget.setObjectName("quickWidget")

        # Label in box on right
        self.l3 = QtWidgets.QLabel(self.centralwidget)
        self.l3.setGeometry(QtCore.QRect(260, 60, 211, 351))
        self.l3.setWordWrap(True)
        self.l3.setObjectName("label")
        
        MainWindow.setCentralWidget(self.centralwidget)
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Capstone"))
        self.b1.setText(_translate("MainWindow", "Coin Calculator"))
        self.b2.setText(_translate("MainWindow", "Multi Coin Calculator"))
        self.b3.setText(_translate("MainWindow", "Print Coin List"))
        self.b4.setText(_translate("MainWindow", "Set Details"))
        self.b5.setText(_translate("MainWindow", "Display Program Config."))
        self.b6.setText(_translate("MainWindow", "Quit the Program"))
        self.l1.setText(_translate("MainWindow", "Capstone Financial Services Ltd."))
        self.l2.setText(_translate("MainWindow", "***Coin Sorter - Main Menu***"))
        self.l3.setText(_translate("MainWindow", "When a button is clicked this is where the output is printed."))

    # Buttons 1, 2, 3 and 6 currently call this function when clicked, changing the label in the box on right
    # Button 1 
    def clicked(self):
        text, okPressed = QtWidgets.QInputDialog.getText(None, "Coin Calculator","Please input the amount of pennies (GBX):" )   
        if okPressed:
            while True:
                try:
                    input_ = float(text)
                    if not(input_.is_integer()) == True:
                        self.l3.setText("Penny fractions do not exist. Please enter new input to try again")
                        break;
                        
                    elif (input_ >=settings["min_"] and input_ <= settings["max_"]):
                        output_ = "Input: {}\n".format(text) 
                        for i in coin_dict:
                            sub_output = ( "Type: {} -  Number of coins: {} - Remainder: {} pence.\n".format(i , int(input_/coin_dict[i]),int(input_ % coin_dict[i])))
                            output_ = output_ + sub_output
                        self.l3.setText(output_)
                        break;
                    else:
                        self.l3.setText("Input out of range. PLease try again!")
                        break;
                except:
                    self.l3.setText("invalid input. PLease try again!")
                    break;
                    
            
    # Button 2
    def clicked2(self):
        text, okPressed = QtWidgets.QInputDialog.getText(None, "Multi Coin Calculator","Please input the amount of pennies (GBX):" )   
        output_ = "";
        if okPressed:
            while True:
                try:
                    input_ = float(text)
                    remainder = input_
                    if not(input_.is_integer()) == True:
                        self.l3.setText("Penny fractions do not exist. Please enter new input to try again")
                        break;
                    elif (input_ >=settings["min_"] and input_ <= settings["max_"]):
                        while not(input_.is_integer()):
                            self.l3.setText("Penny fractions do not exist. [Press enter to try again]")
                            break;
                        output_ = "Input: {}\nUsing all coins (in order of importance), you will have:\n\n".format(text)
                        for i in coin_dict:
                            output_ = output_ + ( "Type: {} -  Number of coins: {}\n".format(i , int(remainder/coin_dict[i])))
                            remainder = remainder % coin_dict[i]
                        output_ = output_ + ("\nYour remainder is: {} pence.".format(int(remainder)))
                        self.l3.setText(output_)
                    else:
                        self.l3.sexText("Input out of range. Please try again!")
                    break;
                except:
                    self.l3.setText("invalid input. Please try again!")
                    break;
                    


    # Button 3
    def clicked3(self):
        output_ = "\n========== Coin list=========== \nThe coins used in this program are: \n"
        for i in coins_interface:
            output_ = output_ +  "{} \n".format(i)
        self.l3.setText(output_)

    # Button 6
    def clicked6(self):
        sys.exit(app.exec_())

    # Adjusts the size of l1 on click depending on the text changed to
    def update(self): # Call update method when button clicked
        self.l1.adjustSize()

    # Set Details / Button 4 pop up window - a dialogue box is better but need to find out how to do this
    def details_popup(self):
        self.window = QtWidgets.QMainWindow()
        self.window.show()
        self.window.resize(400, 400)
        self.window.setObjectName("Set Details")
        self.window.setWindowTitle(("Set details"))
        
    def show_new_window(self):
        self.w = show_details()
        self.w.show()
        
            
    

    # Display Prog. Config / Button 5 pop up window
    def config_popup(self):
        msg = QMessageBox()
        msg.setWindowTitle("Program Configurations")
        msg.setText("This is where we can display our configs") # Change text to include configs.
        msg.setInformativeText("This is the informative text.")
        msg.setIcon(QMessageBox.Information) # Information icon 
        msg.setStandardButtons(QMessageBox.Ok)
        msg.buttonClicked.connect(self.popup_button)
        x = msg.exec_()    
    
    def popup_button(self, i):
        print(i.text())
    # Added this function as it logs which buttons are clicked in the terminal
    # May be useful for tracking the user inputs
    
class show_details(QWidget):
    """
    This "window" is a QWidget. If it has no parent, it
    will appear as a free-floating window as we want.
    """
    def __init__(self):
        super().__init__()
        layout = QVBoxLayout()
        self.label = QLabel("Set details")
        layout.addWidget(self.label)
        self.setLayout(layout)

    

        
        
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
    


